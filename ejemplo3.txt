using System;
using System.Collections.Generic;
using System.Linq;
using System.Web.UI;
using System.Web.UI.WebControls;
using SC.Entidades.Externas;
using SC.Negocio.PadronDeClientes;
using SC.WebApp.Comunes;
using Telerik.Web.UI;

namespace SC.WebApp.PadronDeClientes
{
    public partial class CambioEstado : System.Web.UI.Page
    {
        private string clvEstadoNuevo;

        private int idContrato
        {
            get { return (int)ViewState["vs_idContrato"]; }
            set { ViewState["vs_idContrato"] = value; }
        }

        private string clvEstadoAnterior
        {
            get { return (string)ViewState["vs_clvEstadoAnterior"]; }
            set { ViewState["vs_clvEstadoAnterior"] = value; }
        }

        private List<E_ESTADOS_CONTRATO> estadosContrato
        {
            get { return (List<E_ESTADOS_CONTRATO>)ViewState["vs_estadosContrato"]; }
            set { ViewState["vs_estadosContrato"] = value; }
        }

        private string observaciones;
        private string usuario;
        private string programa;

        protected void Page_Load(object sender, EventArgs e)
        {
            usuario = Contexto.clUsuario;
            programa = Contexto.nbPrograma;

            if (!IsPostBack)
            {
                if (Request.Params["clvContrato"] != null && Request.Params["clvContrato"] != null)
                {
                    clvEstadoAnterior = Request.Params["clvContrato"];
                    idContrato = int.Parse(Request.Params["idContrato"]);
                    llenarEstado(clvEstadoAnterior);
                }
            }
        }

        public void llenarEstado(String clvEstado)
        {
            ConsultaNegocio consultaNegocio = new ConsultaNegocio();
            estadosContrato = consultaNegocio.ObtenerEstadosContrato(clvEstado).Select(s => new E_ESTADOS_CONTRATO() { CL_ESTADO_CONTRATO = s.CL_ESTADO_CONTRATO, NB_ESTADO_CONTRATO = s.NB_ESTADO_CONTRATO }).ToList();
            cbxEstados.DataSource = estadosContrato;
            cbxEstados.DataTextField = "NB_ESTADO_CONTRATO";
            cbxEstados.DataValueField = "CL_ESTADO_CONTRATO";
            cbxEstados.DataBind();
        }
        public string getcontrato()
        {
            ConsultaNegocio consultaNegocio = new ConsultaNegocio();
            decimal adeudo = consultaNegocio.ObtieneAdeudoxContrato(idContrato); 
            string mensaje = "";
            if (adeudo > 0)
            {
                mensaje = "El contrato " + idContrato.ToString().PadLeft(10, '0') + " cuenta con un adeudo de $" + adeudo + " ¿Desea continuar con el cambio de estado?";
            }
            else
            {
                mensaje = "El contrato " + idContrato.ToString().PadLeft(10, '0') + " cambiara de estado, ¿Realmente desea continuar?";
            }
            confirmtext.InnerText = mensaje;
            return mensaje;
        }
        protected void btnAceptar_Click(object sender, EventArgs e)
        {
            int esError = 0;
            clvEstadoNuevo = cbxEstados.SelectedValue.ToString();

            observaciones = txtDescripcion.Text;

            if (txtDescripcion.Text != "")
            {
                ConsultaNegocio consultaNegocio = new ConsultaNegocio();
                esError = consultaNegocio.ActualizaEstado(Contexto.idOrganismo, idContrato, clvEstadoNuevo, clvEstadoAnterior, observaciones, usuario, programa);
                ScriptManager.RegisterStartupScript(this, GetType(), "close", String.Format("CloseModal({0});", esError), true);
                //Page.ClientScript.RegisterStartupScript(this.GetType(), "MyScript", "closeWindow(" + esError + ")", true);
            }
        }

        protected void btnAceptar_Click1(object sender, EventArgs e)
        {
            confirmtext.InnerText = getcontrato();
        }
    }
}